---
# Add swapfile to Ubuntu
# See:
#
# https://www.digitalocean.com/community/tutorials/
#     how-to-add-swap-space-on-ubuntu-16-04
#

# - name: Check if swapfile exists.
#   stat: path="{{ swapfile_path }}"
#   register: swapfile
- name: Check if swapfile exists.
  command: stat "{{ swapfile_path }}"
  register: swapfile
  ignore_errors: true


- set_fact:
    swapfile_exists: "{{ True if swapfile.rc == 0 else False }}"


# Use a block to perform tasks conditionally
# only if /.swapfile is not present
- block:

  # determine filesystem tipe of root directory
  - name: Determine filesystem tipe of root directory.
    command: findmnt -n -o FSTYPE -T /home
    register: root_fstype

  # read config, create swapfile
  - block:
    - block:
      - name: Convert swapfile_size to bytes
        shell: >
          echo "{{ swapfile_size }}" | \
          awk '/[0-9]B?$/{printf "%u\n", $1;next};
               /[tT]B?$/{printf "%u\n", $1*(1024*1024*1024*1024);next};
               /[gG]B?$/{printf "%u\n", $1*(1024*1024*1024);next};
               /[mM]B?$/{printf "%u\n", $1*(1024*1024);next};
               /[kK]B?$/{printf "%u\n", $1*1024;next};'
        register: swapfile_size_bytes

      - set_fact:
          swapfile_size_bytes: "{{ swapfile_size_bytes.stdout }}"

      - name: Get system RAM size.
        shell: free -b | grep -E '^Mem:' | awk '{print $2}'
        register: ram_size

      - set_fact:
          ram_size: "{{ ram_size.stdout|float }}"

      - name: Calculate block size.
        set_fact:
          block_size: "{{ (ram_size|float)*(block_fraction_of_ram|float) }}"

      - name: Calculate block count.
        command: printf "%.0f" "{{ (swapfile_size_bytes|float)/(block_size|float) }}"
        register: block_count

      - set_fact:
          block_count: "{{ block_count.stdout|int }}"

      - name: Allocate '/.swapfile'.
        command: /bin/dd if=/dev/zero of="{{ swapfile_path }}" conv=notrunc bs="{{ block_size|int }}" count="{{ block_count|int }}"
        args:
          creates: "{{ swapfile_path }}"

      when: root_fstype is success and (root_fstype.stdout == 'ext2')

    - name: Allocate '/.swapfile'.
      command: /usr/bin/fallocate -l "{{ swapfile_size }}" "{{ swapfile_path }}"
      args:
        creates: "{{ swapfile_path }}"
      when: root_fstype is success and (root_fstype.stdout == 'ext3' or root_fstype.stdout == 'ext4')

  # set permissions
  - name: Permissions of swapfile are 600
    file: dest="{{ swapfile_path }}" mode=600

  # make /.swapfile a swap partition and activate it
  - name: Make swapfile a swap space.
    command: /sbin/mkswap "{{ swapfile_path }}"

  - name: Activate swapfile as a swap space.
    command: /sbin/swapon "{{ swapfile_path }}"

  # add /.swapfile to /etc/fstab to make it permanent
  - name: Update /etc/fstab to make swapfile permanent.
    blockinfile:
      path: /etc/fstab
      backup: yes
      block: |
        # make swapfile permanent
        {{ swapfile_path }}   none    swap    sw    0   0

  when: swapfile_exists == False
  rescue:
    - debug:
       msg: 'Error caught, deactivating and deleting swapfile (if it exists)'

    - stat: path="{{ swapfile_path }}"
      register: swapfile

    - name: Deactivate swapfile
      command: swapoff "{{ swapfile_path }}" || true
      when: swapfile.stat.exists == True
    - name: Remove swapfile
      file: path="{{ swapfile_path }}" state=absent
      when: swapfile.stat.exists == True

    - fail:
        msg: Error caught, deactivating and deleting {{ swapfile_path }}

- name: Read sysctl settings.
  command: /sbin/sysctl -a
  register: sysctl_settings

- block:
  # adjust swappiness and cache pressure
  - name: Copy 101-swappiness.conf to /etc/sysctl.d/
    template:
      src: ./templates/etc/sysctl.d/101-swappiness.conf.j2
      dest: /etc/sysctl.d/101-swappiness.conf
      mode: 0644
    notify: sysctl

  - name: Set swappiness.
    command: /sbin/sysctl vm.swappiness={{ swappiness }}

  # swappiness = 0 is a perfectly legitimate value
  when: sysctl_settings.stdout.find('vm.swappiness') != -1

- block:
  - name: Copy 102-cache-pressure.conf to /etc/sysctl.d/
    template:
      src: ./templates/etc/sysctl.d/102-cache-pressure.conf.j2
      dest: /etc/sysctl.d/102-cache-pressure.conf
      mode: 0644
    notify: sysctl

  - name: Set cache pressure.
    command: /sbin/sysctl vm.vfs_cache_pressure={{ vfs_cache_pressure }}

  # vfs_cache_pressure = 0 is a perfectly legitimate value
  when: sysctl_settings.stdout.find('vm.vfs_cache_pressure') != -1
